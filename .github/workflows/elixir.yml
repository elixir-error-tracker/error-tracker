name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'guides/**'
  pull_request:
    paths-ignore:
      - 'guides/**'
env:
  MIX_ENV: test

jobs:
  code_quality_and_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.15.0
            erlang: 24.0.0
          - elixir: 1.16.0
            erlang: 24.0.0
          - elixir: 1.17.0
            erlang: 27.0.0
    services:
      db:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    name: Elixir v${{ matrix.elixir }}, Erlang v${{ matrix.erlang }}
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.erlang }}
          elixir-version: ${{ matrix.elixir }}

      - name: Retrieve Dependencies Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.erlang }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}

      - name: Install Mix Dependencies
        run: mix deps.get

      - name: Check unused dependencies
        run: mix deps.unlock --check-unused

      - name: Compile dependencies
        run: mix deps.compile

      - name: Check format
        run: mix format --check-formatted

      - name: Check application compile warnings
        run: mix compile --force --warnings-as-errors

      - name: Check Credo warnings
        run: mix credo

      - name: Run Tests
        run: mix test
